{
    "ORIGINAL_0": {
    "file": "methods_ORIGINAL_0.c",
    "mutants": {
      "MCIB_1": {
        "diff": "--- \n+++ \n@@ -22,4 +22 @@\n-IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n-                        tlsv1_3_method,\n-                        ossl_statem_accept,\n-                        ossl_statem_connect, TLSv1_3_enc_data)\n+\n@@ -31,0 +29,4 @@\n+IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n+                        tlsv1_3_method,\n+                        ossl_statem_accept,\n+                        ossl_statem_connect, TLSv1_3_enc_data)\n",
        "file": "methods_MCIB_1.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_1/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:47.395550423 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_1/d41d8c_methods_MCIB_1.e.c\t2017-08-31 16:42:47.515548620 -0300\n@@ -9165,8 +9165,8 @@\n void custom_exts_free(custom_ext_methods *exts);\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n-const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n+const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_1/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:47.863543388 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_1/88ac55_methods_MCIB_1.e.c\t2017-08-31 16:42:47.979541644 -0300\n@@ -9162,8 +9162,8 @@\n void custom_exts_free(custom_ext_methods *exts);\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n-const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n+const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_10": {
        "diff": "--- \n+++ \n@@ -56,0 +57 @@\n+#ifndef OPENSSL_NO_TLS1_1_METHOD\n@@ -63 +64 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n",
        "file": "methods_MCIB_10.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_10/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:12.979166406 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_10/88ac55_methods_MCIB_10.e.c\t2017-08-31 16:43:13.091164728 -0300\n@@ -9167,7 +9167,6 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n-const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_11": {
        "diff": "--- \n+++ \n@@ -62 +62 @@\n-#endif\n+\n@@ -67,0 +68 @@\n+#endif\n",
        "file": "methods_MCIB_11.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_11/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:10.187208259 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_11/77488b_methods_MCIB_11.e.c\t2017-08-31 16:43:10.299206579 -0300\n@@ -9167,7 +9167,6 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n-const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_12": {
        "diff": "--- \n+++ \n@@ -62,0 +63 @@\n+#ifndef OPENSSL_NO_TLS1_METHOD\n@@ -69 +70 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n",
        "file": "methods_MCIB_12.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_12/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:50.435504732 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_12/38737d_methods_MCIB_12.e.c\t2017-08-31 16:42:50.551502990 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n-const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_13": {
        "diff": "--- \n+++ \n@@ -68 +68 @@\n-#endif\n+\n@@ -73,0 +74 @@\n+#endif\n",
        "file": "methods_MCIB_13.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_13/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:52.287476905 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_13/88ac55_methods_MCIB_13.e.c\t2017-08-31 16:42:52.403475162 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_14": {
        "diff": "--- \n+++ \n@@ -68,0 +69 @@\n+#ifndef OPENSSL_NO_SSL3_METHOD\n@@ -75 +76 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n",
        "file": "methods_MCIB_14.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_14/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:48.766631095 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_14/d41d8c_methods_MCIB_14.e.c\t2017-08-31 16:43:48.886629304 -0300\n@@ -9173,7 +9173,6 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_14/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:49.006627513 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_14/fc4be3_methods_MCIB_14.e.c\t2017-08-31 16:43:49.122625781 -0300\n@@ -9173,7 +9173,6 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_15": {
        "diff": "--- \n+++ \n@@ -74 +74 @@\n-#endif\n+\n@@ -77,0 +78 @@\n+#endif\n",
        "file": "methods_MCIB_15.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_16": {
        "diff": "--- \n+++ \n@@ -74,0 +75,3 @@\n+/*-\n+ * TLS/SSLv3 client methods\n+ */\n@@ -79,3 +82 @@\n-/*-\n- * TLS/SSLv3 client methods\n- */\n+\n",
        "file": "methods_MCIB_16.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_17": {
        "diff": "--- \n+++ \n@@ -86,4 +86 @@\n-IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n-                        tlsv1_3_client_method,\n-                        ssl_undefined_function,\n-                        ossl_statem_connect, TLSv1_3_enc_data)\n+\n@@ -95,0 +93,4 @@\n+IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n+                        tlsv1_3_client_method,\n+                        ssl_undefined_function,\n+                        ossl_statem_connect, TLSv1_3_enc_data)\n",
        "file": "methods_MCIB_17.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_17/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:31.810884457 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_17/d41d8c_methods_MCIB_17.e.c\t2017-08-31 16:43:31.946882422 -0300\n@@ -9175,8 +9175,8 @@\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n-const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n+const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_17/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:32.298877158 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_17/88ac55_methods_MCIB_17.e.c\t2017-08-31 16:43:32.410875483 -0300\n@@ -9170,8 +9170,8 @@\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n-const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n+const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_18": {
        "diff": "--- \n+++ \n@@ -89,0 +90 @@\n+#ifndef OPENSSL_NO_TLS1_1_METHOD\n@@ -96 +97 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n",
        "file": "methods_MCIB_18.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_18/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:24.474994219 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_18/88ac55_methods_MCIB_18.e.c\t2017-08-31 16:43:24.586992542 -0300\n@@ -9171,7 +9171,6 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_19": {
        "diff": "--- \n+++ \n@@ -95 +95 @@\n-#endif\n+\n@@ -101,0 +102 @@\n+#endif\n",
        "file": "methods_MCIB_19.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_19/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:36.775710172 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_19/77488b_methods_MCIB_19.e.c\t2017-08-31 16:42:36.887708487 -0300\n@@ -9171,7 +9171,6 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_19/72f41f_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:37.231703309 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_19/72f41f_methods_MCIB_19.e.c\t2017-08-31 16:42:37.343701623 -0300\n@@ -9166,7 +9166,6 @@\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_2": {
        "diff": "--- \n+++ \n@@ -25,0 +26 @@\n+#ifndef OPENSSL_NO_TLS1_1_METHOD\n@@ -32 +33 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n",
        "file": "methods_MCIB_2.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_2/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:00.275356951 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_2/88ac55_methods_MCIB_2.e.c\t2017-08-31 16:43:00.391355209 -0300\n@@ -9163,7 +9163,6 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n-const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_20": {
        "diff": "--- \n+++ \n@@ -95,0 +96 @@\n+#ifndef OPENSSL_NO_TLS1_METHOD\n@@ -102 +103 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n",
        "file": "methods_MCIB_20.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_20/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:43.323611651 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_20/38737d_methods_MCIB_20.e.c\t2017-08-31 16:42:43.439609906 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_21": {
        "diff": "--- \n+++ \n@@ -101 +101 @@\n-#endif\n+\n@@ -107,0 +108 @@\n+#endif\n",
        "file": "methods_MCIB_21.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_21/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:05.526381116 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_21/88ac55_methods_MCIB_21.e.c\t2017-08-31 16:44:05.638379446 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_21/fa5867_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:05.998374082 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_21/fa5867_methods_MCIB_21.e.c\t2017-08-31 16:44:06.114372354 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_22": {
        "diff": "--- \n+++ \n@@ -101,0 +102 @@\n+#ifndef OPENSSL_NO_SSL3_METHOD\n@@ -108 +109 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n",
        "file": "methods_MCIB_22.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_22/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:49.710617004 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_22/d41d8c_methods_MCIB_22.e.c\t2017-08-31 16:43:49.830615213 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_22/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:49.950613422 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_22/fc4be3_methods_MCIB_22.e.c\t2017-08-31 16:43:50.066611690 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_23": {
        "diff": "--- \n+++ \n@@ -107 +107 @@\n-#endif\n+\n@@ -111,0 +112 @@\n+#endif\n",
        "file": "methods_MCIB_23.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_24": {
        "diff": "--- \n+++ \n@@ -107,0 +108,3 @@\n+/*-\n+ * DTLS methods\n+ */\n@@ -112,3 +115 @@\n-/*-\n- * DTLS methods\n- */\n+\n",
        "file": "methods_MCIB_24.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_25": {
        "diff": "--- \n+++ \n@@ -112,3 +112 @@\n-/*-\n- * DTLS methods\n- */\n+\n@@ -120,0 +119,3 @@\n+/*-\n+ * DTLS methods\n+ */\n",
        "file": "methods_MCIB_25.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_26": {
        "diff": "--- \n+++ \n@@ -114,0 +115 @@\n+#ifndef OPENSSL_NO_DTLS1_2_METHOD\n@@ -121 +122 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n",
        "file": "methods_MCIB_26.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_26/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:51.367490728 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_26/2a2f0b_methods_MCIB_26.e.c\t2017-08-31 16:42:51.479489045 -0300\n@@ -9176,7 +9176,6 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n-const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_27": {
        "diff": "--- \n+++ \n@@ -120 +120 @@\n-#endif\n+\n@@ -126,0 +127 @@\n+#endif\n",
        "file": "methods_MCIB_27.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_27/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:26.747861209 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_27/d33d48_methods_MCIB_27.e.c\t2017-08-31 16:42:26.867859399 -0300\n@@ -9176,7 +9176,6 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n-const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "MCIB_28": {
        "diff": "--- \n+++ \n@@ -120,0 +121,4 @@\n+IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n+                          DTLS_method,\n+                          ossl_statem_accept,\n+                          ossl_statem_connect, DTLSv1_2_enc_data)\n@@ -127,4 +131 @@\n-IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n-                          DTLS_method,\n-                          ossl_statem_accept,\n-                          ossl_statem_connect, DTLSv1_2_enc_data)\n+\n",
        "file": "methods_MCIB_28.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_28/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:30.747800940 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_28/d41d8c_methods_MCIB_28.e.c\t2017-08-31 16:42:30.867799132 -0300\n@@ -9180,8 +9180,8 @@\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n-const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n+const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": []
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_29": {
        "diff": "--- \n+++ \n@@ -132,3 +132 @@\n-/*-\n- * DTLS server methods\n- */\n+\n@@ -140,0 +139,3 @@\n+/*-\n+ * DTLS server methods\n+ */\n",
        "file": "methods_MCIB_29.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_3": {
        "diff": "--- \n+++ \n@@ -31 +31 @@\n-#endif\n+\n@@ -36,0 +37 @@\n+#endif\n",
        "file": "methods_MCIB_3.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_3/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:53.215462963 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_3/77488b_methods_MCIB_3.e.c\t2017-08-31 16:42:53.327461281 -0300\n@@ -9163,7 +9163,6 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n-const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_30": {
        "diff": "--- \n+++ \n@@ -134,0 +135 @@\n+#ifndef OPENSSL_NO_DTLS1_2_METHOD\n@@ -141 +142 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n",
        "file": "methods_MCIB_30.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_30/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:35.842824167 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_30/2a2f0b_methods_MCIB_30.e.c\t2017-08-31 16:43:35.958822432 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n-const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_31": {
        "diff": "--- \n+++ \n@@ -140 +140 @@\n-#endif\n+\n@@ -146,0 +147 @@\n+#endif\n",
        "file": "methods_MCIB_31.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_31/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:25.807875375 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_31/d33d48_methods_MCIB_31.e.c\t2017-08-31 16:42:25.919873687 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n-const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "MCIB_32": {
        "diff": "--- \n+++ \n@@ -140,0 +141,4 @@\n+IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n+                          DTLS_server_method,\n+                          ossl_statem_accept,\n+                          ssl_undefined_function, DTLSv1_2_enc_data)\n@@ -147,4 +151 @@\n-IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n-                          DTLS_server_method,\n-                          ossl_statem_accept,\n-                          ssl_undefined_function, DTLSv1_2_enc_data)\n+\n",
        "file": "methods_MCIB_32.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_32/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:33.171764432 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_32/d41d8c_methods_MCIB_32.e.c\t2017-08-31 16:42:33.287762686 -0300\n@@ -9183,8 +9183,8 @@\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n-const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n+const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }",
              "features": []
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_33": {
        "diff": "--- \n+++ \n@@ -152,3 +152 @@\n-/*-\n- * DTLS client methods\n- */\n+\n@@ -164,0 +163,3 @@\n+/*-\n+ * DTLS client methods\n+ */\n",
        "file": "methods_MCIB_33.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_34": {
        "diff": "--- \n+++ \n@@ -154,0 +155 @@\n+#ifndef OPENSSL_NO_DTLS1_2_METHOD\n@@ -165 +166 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n",
        "file": "methods_MCIB_34.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_34/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:14.867138112 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_34/2a2f0b_methods_MCIB_34.e.c\t2017-08-31 16:43:14.979136434 -0300\n@@ -9180,8 +9180,6 @@\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n-const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n-const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_35": {
        "diff": "--- \n+++ \n@@ -164 +164 @@\n-#endif\n+\n@@ -170,0 +171 @@\n+#endif\n",
        "file": "methods_MCIB_35.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_35/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:06.474366990 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_35/d33d48_methods_MCIB_35.e.c\t2017-08-31 16:44:06.586365320 -0300\n@@ -9180,7 +9180,6 @@\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n-const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "MCIB_36": {
        "diff": "--- \n+++ \n@@ -164,0 +165,4 @@\n+IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n+                          DTLS_client_method,\n+                          ssl_undefined_function,\n+                          ossl_statem_connect, DTLSv1_2_enc_data)\n@@ -171,4 +175 @@\n-IMPLEMENT_dtls1_meth_func(DTLS_ANY_VERSION, 0, 0,\n-                          DTLS_client_method,\n-                          ssl_undefined_function,\n-                          ossl_statem_connect, DTLSv1_2_enc_data)\n+\n",
        "file": "methods_MCIB_36.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_36/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:24.631893101 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_36/d41d8c_methods_MCIB_36.e.c\t2017-08-31 16:42:24.747891352 -0300\n@@ -9187,8 +9187,8 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n-const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {\n     return tlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_36/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:25.103885987 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_36/969dd8_methods_MCIB_36.e.c\t2017-08-31 16:42:25.219884238 -0300\n@@ -9187,8 +9187,8 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n-const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {\n     return tlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "MCIB_37": {
        "diff": "--- \n+++ \n@@ -175 +175 @@\n-#if OPENSSL_API_COMPAT < 0x10100000L\n+\n@@ -192,0 +193 @@\n+#if OPENSSL_API_COMPAT < 0x10100000L\n",
        "file": "methods_MCIB_37.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_38": {
        "diff": "--- \n+++ \n@@ -175,0 +176 @@\n+# ifndef OPENSSL_NO_TLS1_1_METHOD\n@@ -193 +194 @@\n-# ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n",
        "file": "methods_MCIB_38.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_38/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:30.174908927 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_38/88ac55_methods_MCIB_38.e.c\t2017-08-31 16:43:30.286907251 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_38/a29cb1_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:30.882898336 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_38/a29cb1_methods_MCIB_38.e.c\t2017-08-31 16:43:30.998896601 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_39": {
        "diff": "--- \n+++ \n@@ -191 +191 @@\n-# endif\n+\n@@ -209,0 +210 @@\n+# endif\n",
        "file": "methods_MCIB_39.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:52.782571156 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/77488b_methods_MCIB_39.e.c\t2017-08-31 16:43:52.894569484 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/c48b31_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:53.478560770 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/c48b31_methods_MCIB_39.e.c\t2017-08-31 16:43:53.590559099 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/72f41f_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:53.706557369 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/72f41f_methods_MCIB_39.e.c\t2017-08-31 16:43:53.814555757 -0300\n@@ -9177,18 +9177,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/d66a20_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:54.158550625 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_39/d66a20_methods_MCIB_39.e.c\t2017-08-31 16:43:54.266549013 -0300\n@@ -9177,18 +9177,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_4": {
        "diff": "--- \n+++ \n@@ -31,0 +32 @@\n+#ifndef OPENSSL_NO_TLS1_METHOD\n@@ -38 +39 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n",
        "file": "methods_MCIB_4.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_4/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:38.643682058 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_4/38737d_methods_MCIB_4.e.c\t2017-08-31 16:42:38.755680373 -0300\n@@ -9164,7 +9164,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_40": {
        "diff": "--- \n+++ \n@@ -192,0 +193 @@\n+# ifndef OPENSSL_NO_TLS1_METHOD\n@@ -210 +211 @@\n-# ifndef OPENSSL_NO_TLS1_METHOD\n+\n",
        "file": "methods_MCIB_40.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_40/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:42.902718664 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_40/38737d_methods_MCIB_40.e.c\t2017-08-31 16:43:43.014716992 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_40/6f050a_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:43.602708209 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_40/6f050a_methods_MCIB_40.e.c\t2017-08-31 16:43:43.714706536 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_41": {
        "diff": "--- \n+++ \n@@ -208 +208 @@\n-# endif\n+\n@@ -226,0 +227 @@\n+# endif\n",
        "file": "methods_MCIB_41.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:48.563532867 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/88ac55_methods_MCIB_41.e.c\t2017-08-31 16:42:48.675531183 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/a29cb1_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:49.271522225 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/a29cb1_methods_MCIB_41.e.c\t2017-08-31 16:42:49.383520542 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/fa5867_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:49.499518799 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/fa5867_methods_MCIB_41.e.c\t2017-08-31 16:42:49.611517116 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/9c466c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:49.967511765 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_41/9c466c_methods_MCIB_41.e.c\t2017-08-31 16:42:50.075510142 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_42": {
        "diff": "--- \n+++ \n@@ -209,0 +210 @@\n+# ifndef OPENSSL_NO_SSL3_METHOD\n@@ -227 +228 @@\n-# ifndef OPENSSL_NO_SSL3_METHOD\n+\n",
        "file": "methods_MCIB_42.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:27.467850357 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/d41d8c_methods_MCIB_42.e.c\t2017-08-31 16:42:27.579848669 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:27.703846801 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/fc4be3_methods_MCIB_42.e.c\t2017-08-31 16:42:27.823844992 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:27.943843184 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/969dd8_methods_MCIB_42.e.c\t2017-08-31 16:42:28.059841437 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/b08575_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:28.411836133 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_42/b08575_methods_MCIB_42.e.c\t2017-08-31 16:42:28.527834384 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_43": {
        "diff": "--- \n+++ \n@@ -225 +225 @@\n-# endif\n+\n@@ -243,0 +244 @@\n+# endif\n",
        "file": "methods_MCIB_43.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_44": {
        "diff": "--- \n+++ \n@@ -226,0 +227 @@\n+# ifndef OPENSSL_NO_DTLS1_2_METHOD\n@@ -244 +245 @@\n-# ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n",
        "file": "methods_MCIB_44.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_45": {
        "diff": "--- \n+++ \n@@ -242 +242 @@\n-# endif\n+\n@@ -260,0 +261 @@\n+# endif\n",
        "file": "methods_MCIB_45.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 8,
            "useless": 120
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:01.926434773 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/d41d8c_methods_MCIB_45.e.c\t2017-08-31 16:44:02.046432985 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:02.166431196 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/fc4be3_methods_MCIB_45.e.c\t2017-08-31 16:44:02.282429466 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:02.402427677 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/969dd8_methods_MCIB_45.e.c\t2017-08-31 16:44:02.518425949 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:02.634424219 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/d33d48_methods_MCIB_45.e.c\t2017-08-31 16:44:02.746422550 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/b08575_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:02.870420701 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/b08575_methods_MCIB_45.e.c\t2017-08-31 16:44:02.986418972 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/486923_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:03.102417243 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/486923_methods_MCIB_45.e.c\t2017-08-31 16:44:03.214415573 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/08fcbf_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:03.330413845 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/08fcbf_methods_MCIB_45.e.c\t2017-08-31 16:44:03.442412175 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/9801a4_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:03.558410446 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_45/9801a4_methods_MCIB_45.e.c\t2017-08-31 16:44:03.670408776 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "MCIB_46": {
        "diff": "--- \n+++ \n@@ -243,0 +244 @@\n+# ifndef OPENSSL_NO_DTLS1_METHOD\n@@ -261 +262 @@\n-# ifndef OPENSSL_NO_DTLS1_METHOD\n+\n",
        "file": "methods_MCIB_46.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_46/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:11.123194227 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_46/d33d48_methods_MCIB_46.e.c\t2017-08-31 16:43:11.235192548 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_46/c8b8c5_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:11.823183733 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_46/c8b8c5_methods_MCIB_46.e.c\t2017-08-31 16:43:11.939181994 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_47": {
        "diff": "--- \n+++ \n@@ -259 +259 @@\n-# endif\n+\n@@ -278 +278,2 @@\n-#endif\n+# endif\n+#endif\n",
        "file": "methods_MCIB_47.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_47/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:01.207342962 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_47/2a2f0b_methods_MCIB_47.e.c\t2017-08-31 16:43:01.319341281 -0300\n@@ -9219,15 +9219,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_47/2c1028_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:01.671335998 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_47/2c1028_methods_MCIB_47.e.c\t2017-08-31 16:43:01.783334317 -0300\n@@ -9219,15 +9219,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "MCIB_48": {
        "diff": "--- \n+++ \n@@ -260,0 +261 @@\n+#endif\n@@ -278 +279 @@\n-#endif\n+\n",
        "file": "methods_MCIB_48.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_5": {
        "diff": "--- \n+++ \n@@ -37 +37 @@\n-#endif\n+\n@@ -42,0 +43 @@\n+#endif\n",
        "file": "methods_MCIB_5.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_5/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:46.618663166 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_5/88ac55_methods_MCIB_5.e.c\t2017-08-31 16:43:46.734661434 -0300\n@@ -9164,7 +9164,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_5/fa5867_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:47.090656118 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_5/fa5867_methods_MCIB_5.e.c\t2017-08-31 16:43:47.206654386 -0300\n@@ -9164,7 +9164,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_6": {
        "diff": "--- \n+++ \n@@ -37,0 +38 @@\n+#ifndef OPENSSL_NO_SSL3_METHOD\n@@ -43 +44 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n",
        "file": "methods_MCIB_6.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_6/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:20.375055604 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_6/d41d8c_methods_MCIB_6.e.c\t2017-08-31 16:43:20.507053626 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_6/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:20.627051829 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_6/fc4be3_methods_MCIB_6.e.c\t2017-08-31 16:43:20.759049853 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_7": {
        "diff": "--- \n+++ \n@@ -42 +42 @@\n-#endif\n+\n@@ -44,0 +45 @@\n+#endif\n",
        "file": "methods_MCIB_7.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_8": {
        "diff": "--- \n+++ \n@@ -42,0 +43,3 @@\n+/*-\n+ * TLS/SSLv3 server methods\n+ */\n@@ -46,3 +49 @@\n-/*-\n- * TLS/SSLv3 server methods\n- */\n+\n",
        "file": "methods_MCIB_8.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "MCIB_9": {
        "diff": "--- \n+++ \n@@ -53,4 +53 @@\n-IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n-                        tlsv1_3_server_method,\n-                        ossl_statem_accept,\n-                        ssl_undefined_function, TLSv1_3_enc_data)\n+\n@@ -62,0 +60,4 @@\n+IMPLEMENT_tls_meth_func(TLS1_3_VERSION, 0, SSL_OP_NO_TLSv1_3,\n+                        tlsv1_3_server_method,\n+                        ossl_statem_accept,\n+                        ssl_undefined_function, TLSv1_3_enc_data)\n",
        "file": "methods_MCIB_9.c",
        "operator": "MCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_9/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:56.307416523 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_9/d41d8c_methods_MCIB_9.e.c\t2017-08-31 16:42:56.423414781 -0300\n@@ -9170,8 +9170,8 @@\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n-const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n+const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_9/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:56.771409555 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_MCIB_9/88ac55_methods_MCIB_9.e.c\t2017-08-31 16:42:56.887407813 -0300\n@@ -9166,8 +9166,8 @@\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n-const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n+const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_0": {
        "diff": "--- \n+++ \n@@ -26,6 +26,3 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_2_VERSION, 0, SSL_OP_NO_TLSv1_2,\n-                        tlsv1_2_method,\n-                        ossl_statem_accept,\n-                        ossl_statem_connect, TLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_0.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_0/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:09.011225891 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_0/d41d8c_methods_RCIB_0.e.c\t2017-08-31 16:43:09.131224091 -0300\n@@ -9166,7 +9166,6 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n-const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_0/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:09.247222352 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_0/88ac55_methods_RCIB_0.e.c\t2017-08-31 16:43:09.359220673 -0300\n@@ -9163,7 +9163,6 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n-const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_1": {
        "diff": "--- \n+++ \n@@ -32,6 +32,3 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1_1,\n-                        tlsv1_1_method,\n-                        ossl_statem_accept,\n-                        ossl_statem_connect, TLSv1_1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_1.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_1/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:00.042462863 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_1/d41d8c_methods_RCIB_1.e.c\t2017-08-31 16:44:00.166461013 -0300\n@@ -9167,7 +9167,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_1/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:00.286459225 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_1/38737d_methods_RCIB_1.e.c\t2017-08-31 16:44:00.398457554 -0300\n@@ -9164,7 +9164,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_10": {
        "diff": "--- \n+++ \n@@ -102,6 +102,3 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1,\n-                        tlsv1_client_method,\n-                        ssl_undefined_function,\n-                        ossl_statem_connect, TLSv1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_10.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_10/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:38.438785364 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_10/d41d8c_methods_RCIB_10.e.c\t2017-08-31 16:43:38.558783571 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_10/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:38.678781777 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_10/fc4be3_methods_RCIB_10.e.c\t2017-08-31 16:43:38.794780043 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_11": {
        "diff": "--- \n+++ \n@@ -108,4 +108,3 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n-IMPLEMENT_ssl3_meth_func(sslv3_client_method,\n-                         ssl_undefined_function, ossl_statem_connect)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_11.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_12": {
        "diff": "--- \n+++ \n@@ -115,6 +115,3 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_DTLSv1,\n-                          dtlsv1_method,\n-                          ossl_statem_accept,\n-                          ossl_statem_connect, DTLSv1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_12.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_12/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:27.538948365 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_12/d41d8c_methods_RCIB_12.e.c\t2017-08-31 16:43:27.658946568 -0300\n@@ -9179,7 +9179,6 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n-const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_12/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:27.778944773 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_12/2a2f0b_methods_RCIB_12.e.c\t2017-08-31 16:43:27.894943037 -0300\n@@ -9176,7 +9176,6 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n-const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_13": {
        "diff": "--- \n+++ \n@@ -121,6 +121,3 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_2_VERSION, 0, SSL_OP_NO_DTLSv1_2,\n-                          dtlsv1_2_method,\n-                          ossl_statem_accept,\n-                          ossl_statem_connect, DTLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_13.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_13/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:02.403325013 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_13/d41d8c_methods_RCIB_13.e.c\t2017-08-31 16:43:02.519323272 -0300\n@@ -9180,7 +9180,6 @@\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n-const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }",
              "features": []
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_14": {
        "diff": "--- \n+++ \n@@ -135,6 +135,3 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_DTLSv1,\n-                          dtlsv1_server_method,\n-                          ossl_statem_accept,\n-                          ssl_undefined_function, DTLSv1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_14.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_14/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:45.458680489 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_14/d41d8c_methods_RCIB_14.e.c\t2017-08-31 16:43:45.574678756 -0300\n@@ -9182,7 +9182,6 @@\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n-const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_14/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:45.690677024 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_14/2a2f0b_methods_RCIB_14.e.c\t2017-08-31 16:43:45.806675291 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n-const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_15": {
        "diff": "--- \n+++ \n@@ -141,6 +141,3 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_2_VERSION, 0, SSL_OP_NO_DTLSv1_2,\n-                          dtlsv1_2_server_method,\n-                          ossl_statem_accept,\n-                          ssl_undefined_function, DTLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_15.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_15/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:37.026806468 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_15/d41d8c_methods_RCIB_15.e.c\t2017-08-31 16:43:37.142804734 -0300\n@@ -9183,7 +9183,6 @@\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n-const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": []
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_16": {
        "diff": "--- \n+++ \n@@ -155,10 +155,4 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_DTLSv1,\n-                          dtlsv1_client_method,\n-                          ssl_undefined_function,\n-                          ossl_statem_connect, DTLSv1_enc_data)\n-IMPLEMENT_dtls1_meth_func(DTLS1_BAD_VER, SSL_METHOD_NO_SUITEB, SSL_OP_NO_DTLSv1,\n-                          dtls_bad_ver_client_method,\n-                          ssl_undefined_function,\n-                          ossl_statem_connect, DTLSv1_enc_data)\n-#endif\n+\n+\n+\n+\n",
        "file": "methods_RCIB_16.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_16/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:37.467699757 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_16/d41d8c_methods_RCIB_16.e.c\t2017-08-31 16:42:37.583698011 -0300\n@@ -9185,8 +9185,6 @@\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n-const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n-const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_16/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:37.703696205 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_16/2a2f0b_methods_RCIB_16.e.c\t2017-08-31 16:42:37.819694459 -0300\n@@ -9180,8 +9180,6 @@\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n-const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n-const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_17": {
        "diff": "--- \n+++ \n@@ -165,6 +165,3 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n-IMPLEMENT_dtls1_meth_func(DTLS1_2_VERSION, 0, SSL_OP_NO_DTLSv1_2,\n-                          dtlsv1_2_client_method,\n-                          ssl_undefined_function,\n-                          ossl_statem_connect, DTLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_17.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_17/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:40.295657201 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_17/d41d8c_methods_RCIB_17.e.c\t2017-08-31 16:42:40.411655456 -0300\n@@ -9187,7 +9187,6 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n-const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": []
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_18": {
        "diff": "--- \n+++ \n@@ -176,16 +176,7 @@\n-# ifndef OPENSSL_NO_TLS1_2_METHOD\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n-# endif\n+\n+\n+\n+\n+\n+\n+\n",
        "file": "methods_RCIB_18.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:25.170983802 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/d41d8c_methods_RCIB_18.e.c\t2017-08-31 16:43:25.294981946 -0300\n@@ -9189,18 +9189,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:25.418980090 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/969dd8_methods_RCIB_18.e.c\t2017-08-31 16:43:25.530978414 -0300\n@@ -9189,18 +9189,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:25.654976558 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/88ac55_methods_RCIB_18.e.c\t2017-08-31 16:43:25.774974761 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/cd9038_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:26.130969434 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_18/cd9038_methods_RCIB_18.e.c\t2017-08-31 16:43:26.242967758 -0300\n@@ -9183,18 +9183,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_19": {
        "diff": "--- \n+++ \n@@ -193,16 +193,7 @@\n-# ifndef OPENSSL_NO_TLS1_1_METHOD\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n-# endif\n+\n+\n+\n+\n+\n+\n+\n",
        "file": "methods_RCIB_19.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:40.338756971 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/d41d8c_methods_RCIB_19.e.c\t2017-08-31 16:43:40.458755178 -0300\n@@ -9201,18 +9201,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:40.578753385 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/969dd8_methods_RCIB_19.e.c\t2017-08-31 16:43:40.694751652 -0300\n@@ -9201,18 +9201,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:40.810749918 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/38737d_methods_RCIB_19.e.c\t2017-08-31 16:43:40.922748245 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/3d0257_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:41.270743046 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_19/3d0257_methods_RCIB_19.e.c\t2017-08-31 16:43:41.382741373 -0300\n@@ -9195,18 +9195,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_2": {
        "diff": "--- \n+++ \n@@ -38,5 +38,3 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1,\n-                        tlsv1_method,\n-                        ossl_statem_accept, ossl_statem_connect, TLSv1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_2.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_2/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:42.131629580 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_2/d41d8c_methods_RCIB_2.e.c\t2017-08-31 16:42:42.247627835 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_2/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:42.367626030 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_2/fc4be3_methods_RCIB_2.e.c\t2017-08-31 16:42:42.487624225 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_20": {
        "diff": "--- \n+++ \n@@ -210,16 +210,7 @@\n-# ifndef OPENSSL_NO_TLS1_METHOD\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n-# endif\n+\n+\n+\n+\n+\n+\n+\n",
        "file": "methods_RCIB_20.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:16.515113420 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/d41d8c_methods_RCIB_20.e.c\t2017-08-31 16:43:16.631111683 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:16.751109885 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/969dd8_methods_RCIB_20.e.c\t2017-08-31 16:43:16.867108146 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:16.991106288 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/fc4be3_methods_RCIB_20.e.c\t2017-08-31 16:43:17.107104551 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/b00f87_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:17.459099278 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_20/b00f87_methods_RCIB_20.e.c\t2017-08-31 16:43:17.575097540 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_21": {
        "diff": "--- \n+++ \n@@ -227,16 +227,7 @@\n-# ifndef OPENSSL_NO_SSL3_METHOD\n-const SSL_METHOD *SSLv3_method(void)\n-{\n-    return sslv3_method();\n-}\n-\n-const SSL_METHOD *SSLv3_server_method(void)\n-{\n-    return sslv3_server_method();\n-}\n-\n-const SSL_METHOD *SSLv3_client_method(void)\n-{\n-    return sslv3_client_method();\n-}\n-# endif\n+\n+\n+\n+\n+\n+\n+\n",
        "file": "methods_RCIB_21.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_22": {
        "diff": "--- \n+++ \n@@ -244,16 +244,7 @@\n-# ifndef OPENSSL_NO_DTLS1_2_METHOD\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n-# endif\n+\n+\n+\n+\n+\n+\n+\n",
        "file": "methods_RCIB_22.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 3
            }
          },
          "products": {
            "impacted": 8,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:54.394547103 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/d41d8c_methods_RCIB_22.e.c\t2017-08-31 16:43:54.510545373 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:54.630543582 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/969dd8_methods_RCIB_22.e.c\t2017-08-31 16:43:54.746541852 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:54.866540062 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/d33d48_methods_RCIB_22.e.c\t2017-08-31 16:43:54.978538391 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/08fcbf_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:55.322533259 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_22/08fcbf_methods_RCIB_22.e.c\t2017-08-31 16:43:55.434531588 -0300\n@@ -9218,15 +9218,3 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_23": {
        "diff": "--- \n+++ \n@@ -261,18 +261,9 @@\n-# ifndef OPENSSL_NO_DTLS1_METHOD\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}\n-# endif\n-\n-#endif\n+\n+\n+\n+\n+\n+\n+\n+\n+#endif\n",
        "file": "methods_RCIB_23.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_23/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:35.583728116 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_23/d41d8c_methods_RCIB_23.e.c\t2017-08-31 16:42:35.699726369 -0300\n@@ -9237,15 +9237,3 @@\n {\n     return dtlsv1_2_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_23/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:35.827724442 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_23/969dd8_methods_RCIB_23.e.c\t2017-08-31 16:42:35.947722636 -0300\n@@ -9237,15 +9237,3 @@\n {\n     return dtlsv1_2_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_3": {
        "diff": "--- \n+++ \n@@ -43,3 +43,3 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n-IMPLEMENT_ssl3_meth_func(sslv3_method, ossl_statem_accept, ossl_statem_connect)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_3.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_4": {
        "diff": "--- \n+++ \n@@ -57,6 +57,3 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_2_VERSION, 0, SSL_OP_NO_TLSv1_2,\n-                        tlsv1_2_server_method,\n-                        ossl_statem_accept,\n-                        ssl_undefined_function, TLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_4.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_4/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:00.982448847 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_4/d41d8c_methods_RCIB_4.e.c\t2017-08-31 16:44:01.098447117 -0300\n@@ -9171,7 +9171,6 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n-const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_4/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:01.214445389 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_4/88ac55_methods_RCIB_4.e.c\t2017-08-31 16:44:01.330443659 -0300\n@@ -9167,7 +9167,6 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n-const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_5": {
        "diff": "--- \n+++ \n@@ -63,6 +63,3 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1_1,\n-                        tlsv1_1_server_method,\n-                        ossl_statem_accept,\n-                        ssl_undefined_function, TLSv1_1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_5.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_5/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:22.327026375 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_5/d41d8c_methods_RCIB_5.e.c\t2017-08-31 16:43:22.447024578 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n-const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_5/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:22.567022782 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_5/38737d_methods_RCIB_5.e.c\t2017-08-31 16:43:22.699020806 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n-const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_6": {
        "diff": "--- \n+++ \n@@ -69,6 +69,3 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1,\n-                        tlsv1_server_method,\n-                        ossl_statem_accept,\n-                        ssl_undefined_function, TLSv1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_6.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_6/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:34.666841749 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_6/d41d8c_methods_RCIB_6.e.c\t2017-08-31 16:43:34.782840015 -0300\n@@ -9173,7 +9173,6 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_6/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:34.902838220 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_6/fc4be3_methods_RCIB_6.e.c\t2017-08-31 16:43:35.018836485 -0300\n@@ -9173,7 +9173,6 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_7": {
        "diff": "--- \n+++ \n@@ -75,4 +75,3 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n-IMPLEMENT_ssl3_meth_func(sslv3_server_method,\n-                         ossl_statem_accept, ssl_undefined_function)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_7.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_8": {
        "diff": "--- \n+++ \n@@ -90,6 +90,3 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_2_VERSION, 0, SSL_OP_NO_TLSv1_2,\n-                        tlsv1_2_client_method,\n-                        ssl_undefined_function,\n-                        ossl_statem_connect, TLSv1_2_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_8.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_8/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:44.526694407 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_8/d41d8c_methods_RCIB_8.e.c\t2017-08-31 16:43:44.646692616 -0300\n@@ -9176,7 +9176,6 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_8/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:44.762690883 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_8/88ac55_methods_RCIB_8.e.c\t2017-08-31 16:43:44.874689210 -0300\n@@ -9171,7 +9171,6 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        }
      },
      "RCIB_9": {
        "diff": "--- \n+++ \n@@ -96,6 +96,3 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n-IMPLEMENT_tls_meth_func(TLS1_1_VERSION, SSL_METHOD_NO_SUITEB, SSL_OP_NO_TLSv1_1,\n-                        tlsv1_1_client_method,\n-                        ssl_undefined_function,\n-                        ossl_statem_connect, TLSv1_1_enc_data)\n-#endif\n+\n+\n+\n",
        "file": "methods_RCIB_9.c",
        "operator": "RCIB",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_9/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:23.291011942 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_9/d41d8c_methods_RCIB_9.e.c\t2017-08-31 16:43:23.407010207 -0300\n@@ -9177,7 +9177,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_9/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:23.527008410 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RCIB_9/38737d_methods_RCIB_9.e.c\t2017-08-31 16:43:23.639006733 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        }
      },
      "RFIC_1": {
        "diff": "--- \n+++ \n@@ -175 +175 @@\n-#if OPENSSL_API_COMPAT < 0x10100000L\n+#if OPENSSL_API_COMPAT  0x10100000L\n",
        "file": "methods_RFIC_1.c",
        "operator": "RFIC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "diff: /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RFIC_1/d41d8c_methods_RFIC_1.e.c: No such file or directory",
              "features": []
            },
            {
              "diff": "diff: /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RFIC_1/969dd8_methods_RFIC_1.e.c: No such file or directory",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RIDC_1": {
        "diff": "--- \n+++ \n@@ -26 +26 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+\n@@ -31 +31 @@\n-#endif\n+\n",
        "file": "methods_RIDC_1.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_1/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:27.219854094 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_1/77488b_methods_RIDC_1.e.c\t2017-08-31 16:42:27.335852347 -0300\n@@ -9163,6 +9163,7 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n+const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_10": {
        "diff": "--- \n+++ \n@@ -96 +96 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n@@ -101 +101 @@\n-#endif\n+\n",
        "file": "methods_RIDC_10.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_10/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:30.507804555 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_10/88ac55_methods_RIDC_10.e.c\t2017-08-31 16:42:30.623802808 -0300\n@@ -9172,6 +9172,7 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n+const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_11": {
        "diff": "--- \n+++ \n@@ -102 +102 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n@@ -107 +107 @@\n-#endif\n+\n",
        "file": "methods_RIDC_11.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_11/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:26.275868321 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_11/38737d_methods_RIDC_11.e.c\t2017-08-31 16:42:26.391866573 -0300\n@@ -9173,6 +9173,7 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n+const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_12": {
        "diff": "--- \n+++ \n@@ -108 +108 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n@@ -111 +111 @@\n-#endif\n+\n",
        "file": "methods_RIDC_12.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_12/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:47.342652356 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_12/d41d8c_methods_RIDC_12.e.c\t2017-08-31 16:43:47.462650564 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *sslv3_client_method(void) { static const SSL_METHOD sslv3_client_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_12/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:47.582648773 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_12/fc4be3_methods_RIDC_12.e.c\t2017-08-31 16:43:47.698647041 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *sslv3_client_method(void) { static const SSL_METHOD sslv3_client_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RIDC_13": {
        "diff": "--- \n+++ \n@@ -115 +115 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+\n@@ -120 +120 @@\n-#endif\n+\n",
        "file": "methods_RIDC_13.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_13/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:57.426501874 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_13/d33d48_methods_RIDC_13.e.c\t2017-08-31 16:43:57.542500145 -0300\n@@ -9176,6 +9176,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_14": {
        "diff": "--- \n+++ \n@@ -121 +121 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n@@ -126 +126 @@\n-#endif\n+\n",
        "file": "methods_RIDC_14.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_14/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:55.123434304 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_14/2a2f0b_methods_RIDC_14.e.c\t2017-08-31 16:42:55.235432622 -0300\n@@ -9177,6 +9177,7 @@\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n+const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_15": {
        "diff": "--- \n+++ \n@@ -135 +135 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+\n@@ -140 +140 @@\n-#endif\n+\n",
        "file": "methods_RIDC_15.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_15/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:42.426725775 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_15/d33d48_methods_RIDC_15.e.c\t2017-08-31 16:43:42.538724103 -0300\n@@ -9178,6 +9178,7 @@\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n+const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_16": {
        "diff": "--- \n+++ \n@@ -141 +141 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n@@ -146 +146 @@\n-#endif\n+\n",
        "file": "methods_RIDC_16.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_16/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:33.478859512 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_16/2a2f0b_methods_RIDC_16.e.c\t2017-08-31 16:43:33.594857778 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n+const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_17": {
        "diff": "--- \n+++ \n@@ -155 +155 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+\n@@ -164 +164 @@\n-#endif\n+\n",
        "file": "methods_RIDC_17.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_17/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:04.995286123 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_17/d33d48_methods_RIDC_17.e.c\t2017-08-31 16:43:05.107284443 -0300\n@@ -9180,6 +9180,8 @@\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n+const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n+const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_18": {
        "diff": "--- \n+++ \n@@ -165 +165 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n@@ -170 +170 @@\n-#endif\n+\n",
        "file": "methods_RIDC_18.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_18/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:32.927768107 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_18/2a2f0b_methods_RIDC_18.e.c\t2017-08-31 16:42:33.043766359 -0300\n@@ -9182,6 +9182,7 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n+const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_19": {
        "diff": "--- \n+++ \n@@ -175 +175 @@\n-#if OPENSSL_API_COMPAT < 0x10100000L\n+\n@@ -278 +278 @@\n-#endif\n+\n",
        "file": "methods_RIDC_19.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 0,
            "useless": 128
          }
        },
        "useful": {
          "forProducts": []
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_2": {
        "diff": "--- \n+++ \n@@ -32 +32 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n@@ -37 +37 @@\n-#endif\n+\n",
        "file": "methods_RIDC_2.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_2/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:44.751590175 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_2/88ac55_methods_RIDC_2.e.c\t2017-08-31 16:42:44.863588491 -0300\n@@ -9164,6 +9164,7 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n+const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_20": {
        "diff": "--- \n+++ \n@@ -176 +176 @@\n-# ifndef OPENSSL_NO_TLS1_2_METHOD\n+\n@@ -191 +191 @@\n-# endif\n+\n",
        "file": "methods_RIDC_20.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_20/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:55.831423671 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_20/77488b_methods_RIDC_20.e.c\t2017-08-31 16:42:55.947421929 -0300\n@@ -9183,6 +9183,18 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *TLSv1_2_method(void)\n+{\n+    return tlsv1_2_method();\n+}\n+const SSL_METHOD *TLSv1_2_server_method(void)\n+{\n+    return tlsv1_2_server_method();\n+}\n+const SSL_METHOD *TLSv1_2_client_method(void)\n+{\n+    return tlsv1_2_client_method();\n+}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_20/ca3bec_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:56.063420187 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_20/ca3bec_methods_RIDC_20.e.c\t2017-08-31 16:42:56.179418445 -0300\n@@ -9183,6 +9183,18 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *TLSv1_2_method(void)\n+{\n+    return tlsv1_2_method();\n+}\n+const SSL_METHOD *TLSv1_2_server_method(void)\n+{\n+    return tlsv1_2_server_method();\n+}\n+const SSL_METHOD *TLSv1_2_client_method(void)\n+{\n+    return tlsv1_2_client_method();\n+}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_21": {
        "diff": "--- \n+++ \n@@ -193 +193 @@\n-# ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n@@ -208 +208 @@\n-# endif\n+\n",
        "file": "methods_RIDC_21.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_21/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:31.719786299 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_21/88ac55_methods_RIDC_21.e.c\t2017-08-31 16:42:31.839784492 -0300\n@@ -9195,6 +9195,18 @@\n {\n     return tlsv1_2_client_method();\n }\n+const SSL_METHOD *TLSv1_1_method(void)\n+{\n+    return tlsv1_1_method();\n+}\n+const SSL_METHOD *TLSv1_1_server_method(void)\n+{\n+    return tlsv1_1_server_method();\n+}\n+const SSL_METHOD *TLSv1_1_client_method(void)\n+{\n+    return tlsv1_1_client_method();\n+}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_21/cd9038_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:31.959782685 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_21/cd9038_methods_RIDC_21.e.c\t2017-08-31 16:42:32.075780937 -0300\n@@ -9195,6 +9195,18 @@\n {\n     return tlsv1_2_client_method();\n }\n+const SSL_METHOD *TLSv1_1_method(void)\n+{\n+    return tlsv1_1_method();\n+}\n+const SSL_METHOD *TLSv1_1_server_method(void)\n+{\n+    return tlsv1_1_server_method();\n+}\n+const SSL_METHOD *TLSv1_1_client_method(void)\n+{\n+    return tlsv1_1_client_method();\n+}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_22": {
        "diff": "--- \n+++ \n@@ -210 +210 @@\n-# ifndef OPENSSL_NO_TLS1_METHOD\n+\n@@ -225 +225 @@\n-# endif\n+\n",
        "file": "methods_RIDC_22.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_22/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:59.566469960 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_22/38737d_methods_RIDC_22.e.c\t2017-08-31 16:43:59.686468170 -0300\n@@ -9207,6 +9207,18 @@\n {\n     return tlsv1_1_client_method();\n }\n+const SSL_METHOD *TLSv1_method(void)\n+{\n+    return tlsv1_method();\n+}\n+const SSL_METHOD *TLSv1_server_method(void)\n+{\n+    return tlsv1_server_method();\n+}\n+const SSL_METHOD *TLSv1_client_method(void)\n+{\n+    return tlsv1_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_22/3d0257_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:59.802466441 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_22/3d0257_methods_RIDC_22.e.c\t2017-08-31 16:43:59.914464771 -0300\n@@ -9207,6 +9207,18 @@\n {\n     return tlsv1_1_client_method();\n }\n+const SSL_METHOD *TLSv1_method(void)\n+{\n+    return tlsv1_method();\n+}\n+const SSL_METHOD *TLSv1_server_method(void)\n+{\n+    return tlsv1_server_method();\n+}\n+const SSL_METHOD *TLSv1_client_method(void)\n+{\n+    return tlsv1_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_23": {
        "diff": "--- \n+++ \n@@ -227 +227 @@\n-# ifndef OPENSSL_NO_SSL3_METHOD\n+\n@@ -242 +242 @@\n-# endif\n+\n",
        "file": "methods_RIDC_23.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:23.667907634 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/d41d8c_methods_RIDC_23.e.c\t2017-08-31 16:42:23.783905886 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:23.907904016 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/969dd8_methods_RIDC_23.e.c\t2017-08-31 16:42:24.023902267 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:24.143900459 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/fc4be3_methods_RIDC_23.e.c\t2017-08-31 16:42:24.263898649 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/b00f87_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:24.383896840 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_23/b00f87_methods_RIDC_23.e.c\t2017-08-31 16:42:24.503895031 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RIDC_24": {
        "diff": "--- \n+++ \n@@ -244 +244 @@\n-# ifndef OPENSSL_NO_DTLS1_2_METHOD\n+\n@@ -259 +259 @@\n-# endif\n+\n",
        "file": "methods_RIDC_24.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_24/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:21.843033622 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_24/2a2f0b_methods_RIDC_24.e.c\t2017-08-31 16:43:21.959031885 -0300\n@@ -9219,6 +9219,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *DTLSv1_2_method(void)\n+{\n+    return dtlsv1_2_method();\n+}\n+const SSL_METHOD *DTLSv1_2_server_method(void)\n+{\n+    return dtlsv1_2_server_method();\n+}\n+const SSL_METHOD *DTLSv1_2_client_method(void)\n+{\n+    return dtlsv1_2_client_method();\n+}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_24/39533d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:22.079030088 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_24/39533d_methods_RIDC_24.e.c\t2017-08-31 16:43:22.203028232 -0300\n@@ -9219,6 +9219,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *DTLSv1_2_method(void)\n+{\n+    return dtlsv1_2_method();\n+}\n+const SSL_METHOD *DTLSv1_2_server_method(void)\n+{\n+    return dtlsv1_2_server_method();\n+}\n+const SSL_METHOD *DTLSv1_2_client_method(void)\n+{\n+    return dtlsv1_2_client_method();\n+}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_25": {
        "diff": "--- \n+++ \n@@ -261 +261 @@\n-# ifndef OPENSSL_NO_DTLS1_METHOD\n+\n@@ -276,3 +276,3 @@\n-# endif\n-\n-#endif\n+\n+\n+#endif\n",
        "file": "methods_RIDC_25.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_25/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:34.194848806 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_25/d33d48_methods_RIDC_25.e.c\t2017-08-31 16:43:34.310847071 -0300\n@@ -9230,3 +9230,15 @@\n {\n     return dtlsv1_2_client_method();\n }\n+const SSL_METHOD *DTLSv1_method(void)\n+{\n+    return dtlsv1_method();\n+}\n+const SSL_METHOD *DTLSv1_server_method(void)\n+{\n+    return dtlsv1_server_method();\n+}\n+const SSL_METHOD *DTLSv1_client_method(void)\n+{\n+    return dtlsv1_client_method();\n+}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_25/08fcbf_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:34.426845337 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_25/08fcbf_methods_RIDC_25.e.c\t2017-08-31 16:43:34.538843663 -0300\n@@ -9230,3 +9230,15 @@\n {\n     return dtlsv1_2_client_method();\n }\n+const SSL_METHOD *DTLSv1_method(void)\n+{\n+    return dtlsv1_method();\n+}\n+const SSL_METHOD *DTLSv1_server_method(void)\n+{\n+    return dtlsv1_server_method();\n+}\n+const SSL_METHOD *DTLSv1_client_method(void)\n+{\n+    return dtlsv1_client_method();\n+}",
              "features": [
                "OPENSSL_API_COMPAT",
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            },
            {
              "diff": "",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        }
      },
      "RIDC_3": {
        "diff": "--- \n+++ \n@@ -38 +38 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n@@ -42 +42 @@\n-#endif\n+\n",
        "file": "methods_RIDC_3.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_3/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:32.447775335 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_3/38737d_methods_RIDC_3.e.c\t2017-08-31 16:42:32.563773589 -0300\n@@ -9165,6 +9165,7 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n+const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_4": {
        "diff": "--- \n+++ \n@@ -43 +43 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n@@ -45 +45 @@\n-#endif\n+\n",
        "file": "methods_RIDC_4.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_4/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:04.770392382 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_4/d41d8c_methods_RIDC_4.e.c\t2017-08-31 16:44:04.890390594 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n+const SSL_METHOD *sslv3_method(void) { static const SSL_METHOD sslv3_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_4/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:05.022388626 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_4/fc4be3_methods_RIDC_4.e.c\t2017-08-31 16:44:05.138386897 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n+const SSL_METHOD *sslv3_method(void) { static const SSL_METHOD sslv3_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RIDC_5": {
        "diff": "--- \n+++ \n@@ -57 +57 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+\n@@ -62 +62 @@\n-#endif\n+\n",
        "file": "methods_RIDC_5.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_5/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:27.286952135 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_5/77488b_methods_RIDC_5.e.c\t2017-08-31 16:43:27.402950399 -0300\n@@ -9167,6 +9167,7 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n+const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_6": {
        "diff": "--- \n+++ \n@@ -63 +63 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+\n@@ -68 +68 @@\n-#endif\n+\n",
        "file": "methods_RIDC_6.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_6/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:29.210923349 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_6/88ac55_methods_RIDC_6.e.c\t2017-08-31 16:43:29.326921612 -0300\n@@ -9168,6 +9168,7 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n+const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_7": {
        "diff": "--- \n+++ \n@@ -69 +69 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+\n@@ -74 +74 @@\n-#endif\n+\n",
        "file": "methods_RIDC_7.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_7/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:59.323371240 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_7/38737d_methods_RIDC_7.e.c\t2017-08-31 16:42:59.435369559 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n+const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RIDC_8": {
        "diff": "--- \n+++ \n@@ -75 +75 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+\n@@ -78 +78 @@\n-#endif\n+\n",
        "file": "methods_RIDC_8.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_8/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:54.403445118 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_8/d41d8c_methods_RIDC_8.e.c\t2017-08-31 16:42:54.519443376 -0300\n@@ -9174,6 +9174,7 @@\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n+const SSL_METHOD *sslv3_server_method(void) { static const SSL_METHOD sslv3_server_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_8/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:54.643441513 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_8/fc4be3_methods_RIDC_8.e.c\t2017-08-31 16:42:54.759439771 -0300\n@@ -9174,6 +9174,7 @@\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n+const SSL_METHOD *sslv3_server_method(void) { static const SSL_METHOD sslv3_server_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RIDC_9": {
        "diff": "--- \n+++ \n@@ -90 +90 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+\n@@ -95 +95 @@\n-#endif\n+\n",
        "file": "methods_RIDC_9.c",
        "operator": "RIDC",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 1,
            "useless": 127
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_9/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:13.907152498 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RIDC_9/77488b_methods_RIDC_9.e.c\t2017-08-31 16:43:14.019150820 -0300\n@@ -9171,6 +9171,7 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n+const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": [
            {
              "diff": "",
              "features": []
            }
          ]
        }
      },
      "RNID_1": {
        "diff": "--- \n+++ \n@@ -26 +26 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+#ifdef OPENSSL_NO_TLS1_2_METHOD\n",
        "file": "methods_RNID_1.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_1/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:56.238519594 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_1/d41d8c_methods_RNID_1.e.c\t2017-08-31 16:43:56.358517805 -0300\n@@ -9166,7 +9166,6 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n-const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_1/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:56.474516074 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_1/77488b_methods_RNID_1.e.c\t2017-08-31 16:43:56.590514344 -0300\n@@ -9163,6 +9163,7 @@\n void ssl_comp_free_compression_methods_int(void);\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n+const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_10": {
        "diff": "--- \n+++ \n@@ -96 +96 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+#ifdef OPENSSL_NO_TLS1_1_METHOD\n",
        "file": "methods_RNID_10.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_10/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:06.655261223 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_10/d41d8c_methods_RNID_10.e.c\t2017-08-31 16:43:06.771259483 -0300\n@@ -9177,7 +9177,6 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n-const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_10/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:06.887257744 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_10/88ac55_methods_RNID_10.e.c\t2017-08-31 16:43:07.003256004 -0300\n@@ -9172,6 +9172,7 @@\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n+const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_11": {
        "diff": "--- \n+++ \n@@ -102 +102 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+#ifdef OPENSSL_NO_TLS1_METHOD\n",
        "file": "methods_RNID_11.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_11/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:28.486934180 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_11/d41d8c_methods_RNID_11.e.c\t2017-08-31 16:43:28.606932385 -0300\n@@ -9178,7 +9178,6 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n-const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_11/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:28.726930589 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_11/38737d_methods_RNID_11.e.c\t2017-08-31 16:43:28.846928794 -0300\n@@ -9173,6 +9173,7 @@\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n+const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_12": {
        "diff": "--- \n+++ \n@@ -108 +108 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+#ifdef OPENSSL_NO_SSL3_METHOD\n",
        "file": "methods_RNID_12.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_12/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:04.266399894 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_12/d41d8c_methods_RNID_12.e.c\t2017-08-31 16:44:04.394397986 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *sslv3_client_method(void) { static const SSL_METHOD sslv3_client_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_12/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:04.514396198 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_12/fc4be3_methods_RNID_12.e.c\t2017-08-31 16:44:04.634394409 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *sslv3_client_method(void) { static const SSL_METHOD sslv3_client_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_13": {
        "diff": "--- \n+++ \n@@ -115 +115 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+#ifdef OPENSSL_NO_DTLS1_METHOD\n",
        "file": "methods_RNID_13.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_13/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:57.666498295 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_13/d41d8c_methods_RNID_13.e.c\t2017-08-31 16:43:57.786496505 -0300\n@@ -9179,7 +9179,6 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n-const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_13/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:57.906494716 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_13/d33d48_methods_RNID_13.e.c\t2017-08-31 16:43:58.022492985 -0300\n@@ -9176,6 +9176,7 @@\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n+const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_14": {
        "diff": "--- \n+++ \n@@ -121 +121 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+#ifdef OPENSSL_NO_DTLS1_2_METHOD\n",
        "file": "methods_RNID_14.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_14/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:39.339671585 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_14/d41d8c_methods_RNID_14.e.c\t2017-08-31 16:42:39.459669779 -0300\n@@ -9180,7 +9180,6 @@\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n-const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_14/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:39.575668034 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_14/2a2f0b_methods_RNID_14.e.c\t2017-08-31 16:42:39.691666289 -0300\n@@ -9177,6 +9177,7 @@\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n+const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_15": {
        "diff": "--- \n+++ \n@@ -135 +135 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+#ifdef OPENSSL_NO_DTLS1_METHOD\n",
        "file": "methods_RNID_15.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_15/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:32.762870219 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_15/d41d8c_methods_RNID_15.e.c\t2017-08-31 16:43:32.878868485 -0300\n@@ -9182,7 +9182,6 @@\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n-const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_15/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:32.994866749 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_15/d33d48_methods_RNID_15.e.c\t2017-08-31 16:43:33.110865015 -0300\n@@ -9178,6 +9178,7 @@\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n+const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_16": {
        "diff": "--- \n+++ \n@@ -141 +141 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+#ifdef OPENSSL_NO_DTLS1_2_METHOD\n",
        "file": "methods_RNID_16.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_16/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:06.175268422 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_16/d41d8c_methods_RNID_16.e.c\t2017-08-31 16:43:06.295266623 -0300\n@@ -9183,7 +9183,6 @@\n const SSL_METHOD *dtlsv1_2_method(void) { static const SSL_METHOD dtlsv1_2_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n-const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_16/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:06.411264883 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_16/2a2f0b_methods_RNID_16.e.c\t2017-08-31 16:43:06.527263143 -0300\n@@ -9179,6 +9179,7 @@\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n+const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_17": {
        "diff": "--- \n+++ \n@@ -155 +155 @@\n-#ifndef OPENSSL_NO_DTLS1_METHOD\n+#ifdef OPENSSL_NO_DTLS1_METHOD\n",
        "file": "methods_RNID_17.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_17/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:03.794406928 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_17/d41d8c_methods_RNID_17.e.c\t2017-08-31 16:44:03.910405200 -0300\n@@ -9185,8 +9185,6 @@\n const SSL_METHOD *dtlsv1_server_method(void) { static const SSL_METHOD dtlsv1_server_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_server_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n-const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n-const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_17/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:44:04.030403411 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_17/d33d48_methods_RNID_17.e.c\t2017-08-31 16:44:04.142401741 -0300\n@@ -9180,6 +9180,8 @@\n const SSL_METHOD *DTLS_method(void) { static const SSL_METHOD DTLS_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_method_data; }\n const SSL_METHOD *dtlsv1_2_server_method(void) { static const SSL_METHOD dtlsv1_2_server_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_server_method_data; }\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n+const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n+const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_18": {
        "diff": "--- \n+++ \n@@ -165 +165 @@\n-#ifndef OPENSSL_NO_DTLS1_2_METHOD\n+#ifdef OPENSSL_NO_DTLS1_2_METHOD\n",
        "file": "methods_RNID_18.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_18/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:08.535233029 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_18/d41d8c_methods_RNID_18.e.c\t2017-08-31 16:43:08.651231289 -0300\n@@ -9187,7 +9187,6 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n-const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_18/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:08.771229490 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_18/2a2f0b_methods_RNID_18.e.c\t2017-08-31 16:43:08.887227750 -0300\n@@ -9182,6 +9182,7 @@\n const SSL_METHOD *DTLS_server_method(void) { static const SSL_METHOD DTLS_server_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_server_method_data; }\n const SSL_METHOD *dtlsv1_client_method(void) { static const SSL_METHOD dtlsv1_client_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_client_method_data; }\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n+const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n const SSL_METHOD *TLSv1_2_method(void)\n {",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_19": {
        "diff": "--- \n+++ \n@@ -176 +176 @@\n-# ifndef OPENSSL_NO_TLS1_2_METHOD\n+# ifdef OPENSSL_NO_TLS1_2_METHOD\n",
        "file": "methods_RNID_19.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:51.602588765 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/d41d8c_methods_RNID_19.e.c\t2017-08-31 16:43:51.718587034 -0300\n@@ -9189,18 +9189,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:51.838585242 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/77488b_methods_RNID_19.e.c\t2017-08-31 16:43:51.950583572 -0300\n@@ -9183,6 +9183,18 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *TLSv1_2_method(void)\n+{\n+    return tlsv1_2_method();\n+}\n+const SSL_METHOD *TLSv1_2_server_method(void)\n+{\n+    return tlsv1_2_server_method();\n+}\n+const SSL_METHOD *TLSv1_2_client_method(void)\n+{\n+    return tlsv1_2_client_method();\n+}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:52.074581721 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/969dd8_methods_RNID_19.e.c\t2017-08-31 16:43:52.190579990 -0300\n@@ -9189,18 +9189,6 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n-const SSL_METHOD *TLSv1_2_method(void)\n-{\n-    return tlsv1_2_method();\n-}\n-const SSL_METHOD *TLSv1_2_server_method(void)\n-{\n-    return tlsv1_2_server_method();\n-}\n-const SSL_METHOD *TLSv1_2_client_method(void)\n-{\n-    return tlsv1_2_client_method();\n-}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/c48b31_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:52.306578258 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_19/c48b31_methods_RNID_19.e.c\t2017-08-31 16:43:52.418576588 -0300\n@@ -9183,6 +9183,18 @@\n const SSL_METHOD *dtls_bad_ver_client_method(void) { static const SSL_METHOD dtls_bad_ver_client_method_data= { 0x0100, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtls_bad_ver_client_method_data; }\n const SSL_METHOD *dtlsv1_2_client_method(void) { static const SSL_METHOD dtlsv1_2_client_method_data= { 0xFEFD, 0, 0x08000000U, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_2_client_method_data; }\n const SSL_METHOD *DTLS_client_method(void) { static const SSL_METHOD DTLS_client_method_data= { 0x1FFFF, 0, 0, dtls1_new, dtls1_clear, dtls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &DTLS_client_method_data; }\n+const SSL_METHOD *TLSv1_2_method(void)\n+{\n+    return tlsv1_2_method();\n+}\n+const SSL_METHOD *TLSv1_2_server_method(void)\n+{\n+    return tlsv1_2_server_method();\n+}\n+const SSL_METHOD *TLSv1_2_client_method(void)\n+{\n+    return tlsv1_2_client_method();\n+}\n const SSL_METHOD *TLSv1_1_method(void)\n {\n     return tlsv1_1_method();",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_2": {
        "diff": "--- \n+++ \n@@ -32 +32 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+#ifdef OPENSSL_NO_TLS1_1_METHOD\n",
        "file": "methods_RNID_2.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_2/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:59.567367578 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_2/d41d8c_methods_RNID_2.e.c\t2017-08-31 16:42:59.683365836 -0300\n@@ -9167,7 +9167,6 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n-const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_2/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:59.799364095 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_2/88ac55_methods_RNID_2.e.c\t2017-08-31 16:42:59.915362354 -0300\n@@ -9164,6 +9164,7 @@\n const SSL_METHOD *TLS_method(void) { static const SSL_METHOD TLS_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_method_data; }\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n+const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_20": {
        "diff": "--- \n+++ \n@@ -193 +193 @@\n-# ifndef OPENSSL_NO_TLS1_1_METHOD\n+# ifdef OPENSSL_NO_TLS1_1_METHOD\n",
        "file": "methods_RNID_20.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:05.235282523 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/d41d8c_methods_RNID_20.e.c\t2017-08-31 16:43:05.351280783 -0300\n@@ -9201,18 +9201,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:05.467279043 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/88ac55_methods_RNID_20.e.c\t2017-08-31 16:43:05.583277303 -0300\n@@ -9195,6 +9195,18 @@\n {\n     return tlsv1_2_client_method();\n }\n+const SSL_METHOD *TLSv1_1_method(void)\n+{\n+    return tlsv1_1_method();\n+}\n+const SSL_METHOD *TLSv1_1_server_method(void)\n+{\n+    return tlsv1_1_server_method();\n+}\n+const SSL_METHOD *TLSv1_1_client_method(void)\n+{\n+    return tlsv1_1_client_method();\n+}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:05.703275503 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/969dd8_methods_RNID_20.e.c\t2017-08-31 16:43:05.819273763 -0300\n@@ -9201,18 +9201,6 @@\n {\n     return tlsv1_2_client_method();\n }\n-const SSL_METHOD *TLSv1_1_method(void)\n-{\n-    return tlsv1_1_method();\n-}\n-const SSL_METHOD *TLSv1_1_server_method(void)\n-{\n-    return tlsv1_1_server_method();\n-}\n-const SSL_METHOD *TLSv1_1_client_method(void)\n-{\n-    return tlsv1_1_client_method();\n-}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/a29cb1_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:05.935272023 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_20/a29cb1_methods_RNID_20.e.c\t2017-08-31 16:43:06.051270283 -0300\n@@ -9195,6 +9195,18 @@\n {\n     return tlsv1_2_client_method();\n }\n+const SSL_METHOD *TLSv1_1_method(void)\n+{\n+    return tlsv1_1_method();\n+}\n+const SSL_METHOD *TLSv1_1_server_method(void)\n+{\n+    return tlsv1_1_server_method();\n+}\n+const SSL_METHOD *TLSv1_1_client_method(void)\n+{\n+    return tlsv1_1_client_method();\n+}\n const SSL_METHOD *TLSv1_method(void)\n {\n     return tlsv1_method();",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_21": {
        "diff": "--- \n+++ \n@@ -210 +210 @@\n-# ifndef OPENSSL_NO_TLS1_METHOD\n+# ifdef OPENSSL_NO_TLS1_METHOD\n",
        "file": "methods_RNID_21.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:47.826645129 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/d41d8c_methods_RNID_21.e.c\t2017-08-31 16:43:47.942643397 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:48.058641665 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/38737d_methods_RNID_21.e.c\t2017-08-31 16:43:48.174639934 -0300\n@@ -9207,6 +9207,18 @@\n {\n     return tlsv1_1_client_method();\n }\n+const SSL_METHOD *TLSv1_method(void)\n+{\n+    return tlsv1_method();\n+}\n+const SSL_METHOD *TLSv1_server_method(void)\n+{\n+    return tlsv1_server_method();\n+}\n+const SSL_METHOD *TLSv1_client_method(void)\n+{\n+    return tlsv1_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:48.294638142 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/969dd8_methods_RNID_21.e.c\t2017-08-31 16:43:48.410636411 -0300\n@@ -9213,18 +9213,6 @@\n {\n     return tlsv1_1_client_method();\n }\n-const SSL_METHOD *TLSv1_method(void)\n-{\n-    return tlsv1_method();\n-}\n-const SSL_METHOD *TLSv1_server_method(void)\n-{\n-    return tlsv1_server_method();\n-}\n-const SSL_METHOD *TLSv1_client_method(void)\n-{\n-    return tlsv1_client_method();\n-}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/6f050a_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:48.526634679 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_21/6f050a_methods_RNID_21.e.c\t2017-08-31 16:43:48.642632947 -0300\n@@ -9207,6 +9207,18 @@\n {\n     return tlsv1_1_client_method();\n }\n+const SSL_METHOD *TLSv1_method(void)\n+{\n+    return tlsv1_method();\n+}\n+const SSL_METHOD *TLSv1_server_method(void)\n+{\n+    return tlsv1_server_method();\n+}\n+const SSL_METHOD *TLSv1_client_method(void)\n+{\n+    return tlsv1_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_22": {
        "diff": "--- \n+++ \n@@ -227 +227 @@\n-# ifndef OPENSSL_NO_SSL3_METHOD\n+# ifdef OPENSSL_NO_SSL3_METHOD\n",
        "file": "methods_RNID_22.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:44.991586566 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/d41d8c_methods_RNID_22.e.c\t2017-08-31 16:42:45.111584762 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:45.231582958 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/fc4be3_methods_RNID_22.e.c\t2017-08-31 16:42:45.351581154 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:45.471579349 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/969dd8_methods_RNID_22.e.c\t2017-08-31 16:42:45.591577544 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/b08575_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:45.711575740 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_22/b08575_methods_RNID_22.e.c\t2017-08-31 16:42:45.831573936 -0300\n@@ -9225,6 +9225,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *SSLv3_method(void)\n+{\n+    return sslv3_method();\n+}\n+const SSL_METHOD *SSLv3_server_method(void)\n+{\n+    return sslv3_server_method();\n+}\n+const SSL_METHOD *SSLv3_client_method(void)\n+{\n+    return sslv3_client_method();\n+}\n const SSL_METHOD *DTLSv1_2_method(void)\n {\n     return dtlsv1_2_method();",
              "features": [
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_23": {
        "diff": "--- \n+++ \n@@ -244 +244 @@\n-# ifndef OPENSSL_NO_DTLS1_2_METHOD\n+# ifdef OPENSSL_NO_DTLS1_2_METHOD\n",
        "file": "methods_RNID_23.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:58.146491136 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/d41d8c_methods_RNID_23.e.c\t2017-08-31 16:43:58.262489406 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/2a2f0b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:58.378487676 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/2a2f0b_methods_RNID_23.e.c\t2017-08-31 16:43:58.494485946 -0300\n@@ -9219,6 +9219,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *DTLSv1_2_method(void)\n+{\n+    return dtlsv1_2_method();\n+}\n+const SSL_METHOD *DTLSv1_2_server_method(void)\n+{\n+    return dtlsv1_2_server_method();\n+}\n+const SSL_METHOD *DTLSv1_2_client_method(void)\n+{\n+    return dtlsv1_2_client_method();\n+}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:58.614484156 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/969dd8_methods_RNID_23.e.c\t2017-08-31 16:43:58.730482427 -0300\n@@ -9225,18 +9225,6 @@\n {\n     return tlsv1_client_method();\n }\n-const SSL_METHOD *DTLSv1_2_method(void)\n-{\n-    return dtlsv1_2_method();\n-}\n-const SSL_METHOD *DTLSv1_2_server_method(void)\n-{\n-    return dtlsv1_2_server_method();\n-}\n-const SSL_METHOD *DTLSv1_2_client_method(void)\n-{\n-    return dtlsv1_2_client_method();\n-}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/2c1028_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:58.846480696 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_23/2c1028_methods_RNID_23.e.c\t2017-08-31 16:43:58.962478967 -0300\n@@ -9219,6 +9219,18 @@\n {\n     return tlsv1_client_method();\n }\n+const SSL_METHOD *DTLSv1_2_method(void)\n+{\n+    return dtlsv1_2_method();\n+}\n+const SSL_METHOD *DTLSv1_2_server_method(void)\n+{\n+    return dtlsv1_2_server_method();\n+}\n+const SSL_METHOD *DTLSv1_2_client_method(void)\n+{\n+    return dtlsv1_2_client_method();\n+}\n const SSL_METHOD *DTLSv1_method(void)\n {\n     return dtlsv1_method();",
              "features": [
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_24": {
        "diff": "--- \n+++ \n@@ -261 +261 @@\n-# ifndef OPENSSL_NO_DTLS1_METHOD\n+# ifdef OPENSSL_NO_DTLS1_METHOD\n",
        "file": "methods_RNID_24.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 2
            }
          },
          "products": {
            "impacted": 4,
            "total": 128,
            "useful": 4,
            "useless": 124
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:41.187643781 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/d41d8c_methods_RNID_24.e.c\t2017-08-31 16:42:41.303642036 -0300\n@@ -9237,15 +9237,3 @@\n {\n     return dtlsv1_2_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/d33d48_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:41.423640231 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/d33d48_methods_RNID_24.e.c\t2017-08-31 16:42:41.535638545 -0300\n@@ -9230,3 +9230,15 @@\n {\n     return dtlsv1_2_client_method();\n }\n+const SSL_METHOD *DTLSv1_method(void)\n+{\n+    return dtlsv1_method();\n+}\n+const SSL_METHOD *DTLSv1_server_method(void)\n+{\n+    return dtlsv1_server_method();\n+}\n+const SSL_METHOD *DTLSv1_client_method(void)\n+{\n+    return dtlsv1_client_method();\n+}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/969dd8_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:41.659636680 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/969dd8_methods_RNID_24.e.c\t2017-08-31 16:42:41.771634995 -0300\n@@ -9237,15 +9237,3 @@\n {\n     return dtlsv1_2_client_method();\n }\n-const SSL_METHOD *DTLSv1_method(void)\n-{\n-    return dtlsv1_method();\n-}\n-const SSL_METHOD *DTLSv1_server_method(void)\n-{\n-    return dtlsv1_server_method();\n-}\n-const SSL_METHOD *DTLSv1_client_method(void)\n-{\n-    return dtlsv1_client_method();\n-}",
              "features": [
                "OPENSSL_API_COMPAT"
              ]
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/c8b8c5_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:41.891633190 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_24/c8b8c5_methods_RNID_24.e.c\t2017-08-31 16:42:42.003631505 -0300\n@@ -9230,3 +9230,15 @@\n {\n     return dtlsv1_2_client_method();\n }\n+const SSL_METHOD *DTLSv1_method(void)\n+{\n+    return dtlsv1_method();\n+}\n+const SSL_METHOD *DTLSv1_server_method(void)\n+{\n+    return dtlsv1_server_method();\n+}\n+const SSL_METHOD *DTLSv1_client_method(void)\n+{\n+    return dtlsv1_client_method();\n+}",
              "features": [
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_API_COMPAT"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_3": {
        "diff": "--- \n+++ \n@@ -38 +38 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+#ifdef OPENSSL_NO_TLS1_METHOD\n",
        "file": "methods_RNID_3.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_3/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:39.815664423 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_3/d41d8c_methods_RNID_3.e.c\t2017-08-31 16:42:39.935662617 -0300\n@@ -9168,7 +9168,6 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n-const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_3/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:40.051660872 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_3/38737d_methods_RNID_3.e.c\t2017-08-31 16:42:40.167659126 -0300\n@@ -9165,6 +9165,7 @@\n const SSL_METHOD *tlsv1_3_method(void) { static const SSL_METHOD tlsv1_3_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_method_data; }\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n+const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_4": {
        "diff": "--- \n+++ \n@@ -43 +43 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+#ifdef OPENSSL_NO_SSL3_METHOD\n",
        "file": "methods_RNID_4.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_4/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:53.911452508 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_4/d41d8c_methods_RNID_4.e.c\t2017-08-31 16:42:54.027450766 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n+const SSL_METHOD *sslv3_method(void) { static const SSL_METHOD sslv3_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_4/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:54.147448964 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_4/fc4be3_methods_RNID_4.e.c\t2017-08-31 16:42:54.267447161 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_2_method(void) { static const SSL_METHOD tlsv1_2_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_method_data; }\n const SSL_METHOD *tlsv1_1_method(void) { static const SSL_METHOD tlsv1_1_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_method_data; }\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n+const SSL_METHOD *sslv3_method(void) { static const SSL_METHOD sslv3_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_5": {
        "diff": "--- \n+++ \n@@ -57 +57 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+#ifdef OPENSSL_NO_TLS1_2_METHOD\n",
        "file": "methods_RNID_5.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_5/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:14.147148901 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_5/d41d8c_methods_RNID_5.e.c\t2017-08-31 16:43:14.263147164 -0300\n@@ -9171,7 +9171,6 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n-const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_5/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:14.383145365 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_5/77488b_methods_RNID_5.e.c\t2017-08-31 16:43:14.495143687 -0300\n@@ -9167,6 +9167,7 @@\n const SSL_METHOD *tlsv1_method(void) { static const SSL_METHOD tlsv1_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_method_data; }\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n+const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_6": {
        "diff": "--- \n+++ \n@@ -63 +63 @@\n-#ifndef OPENSSL_NO_TLS1_1_METHOD\n+#ifdef OPENSSL_NO_TLS1_1_METHOD\n",
        "file": "methods_RNID_6.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_6/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:39.862764084 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_6/d41d8c_methods_RNID_6.e.c\t2017-08-31 16:43:39.982762291 -0300\n@@ -9172,7 +9172,6 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n-const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_6/88ac55_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:40.098760557 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_6/88ac55_methods_RNID_6.e.c\t2017-08-31 16:43:40.214758823 -0300\n@@ -9168,6 +9168,7 @@\n const SSL_METHOD *TLS_server_method(void) { static const SSL_METHOD TLS_server_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_server_method_data; }\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n+const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_7": {
        "diff": "--- \n+++ \n@@ -69 +69 @@\n-#ifndef OPENSSL_NO_TLS1_METHOD\n+#ifdef OPENSSL_NO_TLS1_METHOD\n",
        "file": "methods_RNID_7.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_7/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:56.718512435 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_7/d41d8c_methods_RNID_7.e.c\t2017-08-31 16:43:56.834510705 -0300\n@@ -9173,7 +9173,6 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n-const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_7/38737d_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:56.954508914 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_7/38737d_methods_RNID_7.e.c\t2017-08-31 16:43:57.066507244 -0300\n@@ -9169,6 +9169,7 @@\n const SSL_METHOD *tlsv1_3_server_method(void) { static const SSL_METHOD tlsv1_3_server_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_server_method_data; }\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n+const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_8": {
        "diff": "--- \n+++ \n@@ -75 +75 @@\n-#ifndef OPENSSL_NO_SSL3_METHOD\n+#ifdef OPENSSL_NO_SSL3_METHOD\n",
        "file": "methods_RNID_8.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_SSL3_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_8/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:44.019601184 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_8/d41d8c_methods_RNID_8.e.c\t2017-08-31 16:42:44.135599439 -0300\n@@ -9174,6 +9174,7 @@\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n+const SSL_METHOD *sslv3_server_method(void) { static const SSL_METHOD sslv3_server_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_8/fc4be3_methods_ORIGINAL_0.e.c\t2017-08-31 16:42:44.259597574 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_8/fc4be3_methods_RNID_8.e.c\t2017-08-31 16:42:44.375595830 -0300\n@@ -9174,6 +9174,7 @@\n const SSL_METHOD *tlsv1_2_server_method(void) { static const SSL_METHOD tlsv1_2_server_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_server_method_data; }\n const SSL_METHOD *tlsv1_1_server_method(void) { static const SSL_METHOD tlsv1_1_server_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_server_method_data; }\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n+const SSL_METHOD *sslv3_server_method(void) { static const SSL_METHOD sslv3_server_method_data= { 0x0300, (1U<<0) | (1U<<1), 0x02000000U, ssl3_new, ssl3_clear, ssl3_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, ssl3_default_timeout, &SSLv3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &sslv3_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }",
              "features": [
                "OPENSSL_NO_SSL3_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      },
      "RNID_9": {
        "diff": "--- \n+++ \n@@ -90 +90 @@\n-#ifndef OPENSSL_NO_TLS1_2_METHOD\n+#ifdef OPENSSL_NO_TLS1_2_METHOD\n",
        "file": "methods_RNID_9.c",
        "operator": "RNID",
        "summary": {
          "features": {
            "found": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD",
                "OPENSSL_NO_TLS1_1_METHOD",
                "OPENSSL_NO_TLS1_METHOD",
                "OPENSSL_NO_SSL3_METHOD",
                "OPENSSL_NO_DTLS1_METHOD",
                "OPENSSL_NO_DTLS1_2_METHOD",
                "OPENSSL_API_COMPAT"
              ],
              "total": 7
            },
            "impacted": {
              "list": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ],
              "total": 1
            }
          },
          "products": {
            "impacted": 2,
            "total": 128,
            "useful": 2,
            "useless": 126
          }
        },
        "useful": {
          "forProducts": [
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_9/d41d8c_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:07.127254144 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_9/d41d8c_methods_RNID_9.e.c\t2017-08-31 16:43:07.247252344 -0300\n@@ -9176,7 +9176,6 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n-const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }",
              "features": []
            },
            {
              "diff": "--- /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_9/77488b_methods_ORIGINAL_0.e.c\t2017-08-31 16:43:07.363250605 -0300\n+++ /home/marcioaug/Projects/marcioaug/mutants/openssl/ssl/methods_c/output/methods_ORIGINAL_0-methods_RNID_9/77488b_methods_RNID_9.e.c\t2017-08-31 16:43:07.479248864 -0300\n@@ -9171,6 +9171,7 @@\n const SSL_METHOD *tlsv1_server_method(void) { static const SSL_METHOD tlsv1_server_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ossl_statem_accept, ssl_undefined_function, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_server_method_data; }\n const SSL_METHOD *TLS_client_method(void) { static const SSL_METHOD TLS_client_method_data= { 0x10000, 0, 0, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &TLS_client_method_data; }\n const SSL_METHOD *tlsv1_3_client_method(void) { static const SSL_METHOD tlsv1_3_client_method_data= { 0x0304, 0, 0x20000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_3_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_3_client_method_data; }\n+const SSL_METHOD *tlsv1_2_client_method(void) { static const SSL_METHOD tlsv1_2_client_method_data= { 0x0303, 0, 0x08000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_2_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_2_client_method_data; }\n const SSL_METHOD *tlsv1_1_client_method(void) { static const SSL_METHOD tlsv1_1_client_method_data= { 0x0302, (1U<<1), 0x10000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_1_client_method_data; }\n const SSL_METHOD *tlsv1_client_method(void) { static const SSL_METHOD tlsv1_client_method_data= { 0x0301, (1U<<1), 0x04000000U, tls1_new, tls1_clear, tls1_free, ssl_undefined_function, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, ssl3_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, ssl3_read_bytes, ssl3_write_bytes, ssl3_dispatch_alert, ssl3_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, tls1_default_timeout, &TLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &tlsv1_client_method_data; }\n const SSL_METHOD *dtlsv1_method(void) { static const SSL_METHOD dtlsv1_method_data= { 0xFEFF, (1U<<1), 0x04000000U, dtls1_new, dtls1_clear, dtls1_free, ossl_statem_accept, ossl_statem_connect, ssl3_read, ssl3_peek, ssl3_write, dtls1_shutdown, ssl3_renegotiate, ssl3_renegotiate_check, dtls1_read_bytes, dtls1_write_app_data_bytes, dtls1_dispatch_alert, dtls1_ctrl, ssl3_ctx_ctrl, ssl3_get_cipher_by_char, ssl3_put_cipher_by_char, ssl3_pending, ssl3_num_ciphers, ssl3_get_cipher, dtls1_default_timeout, &DTLSv1_enc_data, ssl_undefined_void_function, ssl3_callback_ctrl, ssl3_ctx_callback_ctrl, }; return &dtlsv1_method_data; }",
              "features": [
                "OPENSSL_NO_TLS1_2_METHOD"
              ]
            }
          ]
        },
        "useless": {
          "forProducts": []
        }
      }
    },
    "operator": "ORIGINAL"
  }
}